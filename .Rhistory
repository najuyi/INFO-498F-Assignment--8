library(dplyr)
library(shiny)
library(plotly)
library(shiny)
library(dplyr)
data("iris")
data
data <- data("iris")
View(data)
data <- data(iris)
data <- data(iris)
View(iris)
library(plotly)
library(dplyr)
source(build_graph.R)
source("build_graph.R")
getwd
source("C:/Users/Administrator.UWIT-H9T8A7AKQR/Documents/Code/INFO 498F/INFO-498F-Assignment--8/scripts/build_graph.r")
data <- data("iris")
View(data)
data <- data(iris)
View(data)
data <- data(iris)
View(data)
data <- iris
data <- irissource("C:/Users/Administrator.UWIT-H9T8A7AKQR/Documents/Code/INFO 498F/INFO-498F-Assignment--8/scripts/build_graph.r")
data <- iris
View(data)
sepal <- data[1:2]
View(sepeal)
View(sepal)
petal <- data[3:4]
runApp('~/Documents/Code/INFO 498F/lecture-15-exercises/exercise-1')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(sepal)
names <- colnames(data)[4:8]
View(names)
names <- colnames(data)[4:8]
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
names <- colnames(data)[4:8]
View(names)
data <- iris
runApp()
View(sepal)
sepal <- colnames(data)[1:2]
View(sepal)
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
View(data)
library(plotly)
runApp()
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
View(data)
names <- colnames(data)[4:8]
View(names)
data <- iris
sepal <- colnames(data)[1:2]
petal <- colnames(data)[3:4]
View(sepal)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(datat)
View(data)
sepal <- colnames(data)[1:2]
View(sepal)
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
names <- colnames(data)[4:8]
View(names)
data <- iris
View(data[1,])
View(data[,1])
runApp()
View(data[,2])
View(colnames(data[,2]))
View(colnames(data[2]))
View(colnames(data[2,]))
flower <- colnames(data)[5]
sepal <- colnames(data)[1:4]
runApp()
runApp()
runApp()
runApp()
sepal <- colnames(data)[1:2]
petal <- colnames(data)[3:4]
runApp()
runApp()
data <- iris
sepal <- colnames(data)[1:2]
View(sepal)
shiny::runApp()
runApp('~/Documents/Code/INFO 498F/lecture-16-exercises')
source('~/Documents/Code/INFO 498F/lecture-16-exercises/traffic_sim.R', echo=TRUE)
runApp('~/Documents/Code/INFO 498F/lecture-16-exercises')
runApp('~/Documents/Code/INFO 498F/lecture-16-exercises')
meow
"meow"
quack"
"meow
woof
quack"
getwd
source("scripts/build_graph.r")
source("scripts/build_graph.r")
shiny::runApp()
data <- iris
sepal <- colnames(data)[1:2]
View(sepal)
View(data["Sepal.Length"])
runApp()
runApp()
library(plotly)
library(dplyr)
build_graph <- function(dataset, x1, y1){
graph <- (plot_ly(data = dataset, x = paste0(dataset[, x1, ]), y = paste0(dataset[, y1, ]), mode = "markers", color = Species)) %>%
layout(x = list(title = "Petal"), y = list(title = "Sepal"))
return(graph)
}
runApp()
runApp()
runApp()
runApp()
plot_ly(z = data, type = "surface")
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(plotly)
data <- iris
# Parses out column names to be used in the shiny input select function
sepal <- colnames(data)[1:2]
petal <- colnames(data)[3:4]
# Decalres shinyui
shinyUI(fluidPage(
titlePanel("Iris"),
# Decalres the layout
sidebarLayout(
# Placed widgets here
sidebarPanel(
"Iris Power",
selectInput("Petal1", label = h3("Petal"),
choices = petal, selected = "Petal.Length"),
selectInput("Sepal1", label = h3("Sepal"),
choices = sepal, selected = "Sepal.Length")
),
sidebarPanel(
"Iris Pow",
selectInput("Petal2", label = h3("Petal"),
choices = petal, selected = "Petal.Length"),
selectInput("Sepal2", label = h3("Sepal"),
choices = sepal, selected = "Sepal.Length")
),
# Put pretty stuff here I.E. graphs
mainPanel(
"Big Iris",
plotlyOutput('scatter'),
plotlyOutput('plot')
)
)
))
runApp()
runApp()
runApp()
View
View(volcano)
runApp()
runApp()
source('D:/Code/info498f/INFO-498F-Assignment--8/scripts/build_graph.R', echo=TRUE)
runApp()
runApp()
source('D:/Code/info498f/INFO-498F-Assignment--8/scripts/build_graph.R', echo=TRUE)
runApp()
build_3d <- function(dataset, x2, y2){
return(plot_ly(data = dataset, x = paste0(dataset[, x2, ]), y = paste0(dataset[, y2, ]), z = Species, mode = "markers", type = "scatter3d", color = Species)) %>%
layout(scene = list(
xaxis = list(title = "Petal"),
yaxis = list(title = "Sepal"),
zaxis = list(title = "Species")))
}
build_3d(data, Sepal.Length, Petal.Length)
build_3d(data, "Sepal.Length", "Petal.Length")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(iris)
